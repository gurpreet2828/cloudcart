name: Terraform CI/CD

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "**.tf"
      - "terraform/**"
      - "terraform-aws/**"
      - "deploy-sock-shop/**"
      - ".github/workflows/terraform-deploy.yaml"

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: us-east-1

jobs:
  init:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set Git Safe Directory
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Prepare placeholder join_command.sh
        run: |
          mkdir -p terraform-aws/scripts
          echo '#!/bin/bash' > terraform-aws/scripts/join_command.sh
          echo 'echo "This is a placeholder join command script."' >> terraform-aws/scripts/join_command.sh
          chmod +x terraform-aws/scripts/join_command.sh

      - name: Prepare placeholder for helm chart
        run: |
          mkdir -p terraform-aws/scripts
          echo '#!/bin/bash' > terraform-aws/scripts/helm_install.sh
          echo 'echo "This is a placeholder Helm install script."' >> terraform-aws/scripts/helm_install.sh
          chmod +x terraform-aws/scripts/helm_install.sh

      - name: Setup SSH Key for EC2 K8s Infrastructure
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/docker
          chmod 600 ~/.ssh/docker

      - name: Setup SSH Key for Jenkins
        run: |
          mkdir -p ~/.ssh    
          echo "${{ secrets.JENKINS_KEY_PRIVATE }}" > ~/.ssh/jenkins_key
          chmod 600 ~/.ssh/jenkins_key

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init

      - name: Terraform validate
        run: terraform validate

  plan:
    needs: validate
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Upload Plan File
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan

  apply:
    needs: plan
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
    runs-on: ubuntu-latest
    environment: production

    env:
      TF_VAR_ssh_key_private: ~/.ssh/docker
      TF_VAR_jenkins_key_private: ~/.ssh/jenkins_key

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH Key for EC2 K8s Infrastructure
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/docker
          chmod 600 ~/.ssh/docker

      - name: Setup SSH Key for Jenkins
        run: |
          mkdir -p ~/.ssh    
          echo "${{ secrets.JENKINS_KEY_PRIVATE }}" > ~/.ssh/jenkins_key
          chmod 600 ~/.ssh/jenkins_key

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Download Plan File
        uses: actions/download-artifact@v3
        with:
          name: tfplan
          path: .

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan

      - name: Save URLs and SSH info to file
        run: |
          echo "App NodePort URL: $(terraform output -raw deployment_app_nodeport_url)" > urls.txt
          echo "Jenkins URL: $(terraform output -json jenkins_instance_info | jq -r '.jenkins_url')" >> urls.txt
          echo "Grafana URL: $(terraform output -json monitoring_publicip_connection_info | jq -r '.grafana_url')" >> urls.txt
          echo "Prometheus URL: $(terraform output -json monitoring_publicip_connection_info | jq -r '.prometheus_url')" >> urls.txt
          echo "K8s ALB DNS: $(terraform output -raw k8s_alb_dns_name)" >> urls.txt

          echo "" >> urls.txt
          echo "=== SSH Connection Details ===" >> urls.txt
          echo "Master: ssh -i ~/.ssh/docker ubuntu@$(terraform output -raw k8s_master_ip)" >> urls.txt

          echo "Worker Nodes:" >> urls.txt
          terraform output -json k8s_worker_connection_info | \
            jq -r '.[] | "\(.tags.Name): \(.ssh_command)"' >> urls.txt

      - name: Upload URLs artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-urls
          path: urls.txt

      - name: Cleanup
        run: |
          rm -f ~/.ssh/docker
          rm -f ~/.ssh/jenkins_key
          rm -f tfplan
          rm -f urls.txt
      - name: Notify Deployment Success
        run: |
          echo "Deployment successful! URLs and SSH info saved to urls.txt."
          echo "You can download the URLs artifact from the Actions tab."
